Non linear data structure
Tree Data Structure is used to organise data in hierarchical manner


==============
height for all leaf node is zero or 1.
height of a node is the max height from all the leaf node.

depth of root is zero
level = depth + 1

max no.of child a binary tree can have is 2

Complete Binary Tree: A Binary Tree is a Complete Binary Tree if all the levels are completely filled except possibly the last level and the last level has to be filled left to right.
Perfect Binary Tree A Binary tree is a Perfect Binary Tree in which all the internal nodes have two children and all leaf nodes are at the same level.

Depth First traversal -
    preorder  (Node Left Right)
    inorder   (Left Node Right)
    postorder (Left Right Node)

Breadth First / Level Order Traversal -> left to right at each level (start from root)


==============

//question order -
==============================   geeks for geeks dsa course  (https://practice.geeksforgeeks.org/batch/dsa-4/)
DepthRecursiveTraversal
HeightOfBinaryTree
PrintNodesAtKDistance
SumOFEachBranch
LevelOrderTraversal
LevelOrderTraversalLineByLine [good]
ReverseLevelOrderTraversalBinaryTree         https://www.youtube.com/watch?v=D2bIbWGgvzI&list=PLrmLmBdmIlpv_jNDXtJGYTPNQ2L1gdHxu&index=14
SizeOfBinaryTree
GetLevelOfANodeInABinaryTree *
MaximumInBinaryTree
SameBinaryTree               https://www.youtube.com/watch?v=ySDDslG8wws&list=PLrmLmBdmIlpv_jNDXtJGYTPNQ2L1gdHxu&index=4
CheckIfTwoTreesAreMirror
ConvertBinaryTreeToItsMirror
CheckForSymmetricTreeMirrorImageOfItself
PrintLeftViewOfBinaryTree
ChildrenSumProperty
RootToLeafSumBinaryTree *     https://www.youtube.com/watch?v=Jg4E4KZstFE&list=PLrmLmBdmIlpv_jNDXtJGYTPNQ2L1gdHxu&index=7
CheckForBalancedBinaryTree * -> Test if A Binary tree is height balanced ?
MaximumWidthOfBinaryTree
ConvertBinaryTreeToDoublyLinkedList *
ConstructBinaryTreeFromInorderAndPreorder *
TreeTraversalInSpiralForm *
AveragesOfLevelsInBinaryTree
IterativePreOrderTraversal
IterativeInorderTraversal           https://www.youtube.com/watch?v=nzmtCFNae9k&list=PLrmLmBdmIlpv_jNDXtJGYTPNQ2L1gdHxu&index=12
IterativePostorderTraversal  *      https://www.youtube.com/watch?v=xLQKdq0Ffjg&list=PLrmLmBdmIlpv_jNDXtJGYTPNQ2L1gdHxu&index=18
DiameterOfABinaryTree *
LowestCommonAncestor *              https://www.youtube.com/watch?v=13m9ZCB8gjw
SerializeAndDeserializeABinaryTree *
FindDistanceBetweenTwoNodesOfABinaryTree *
PrintAncestorsOfAGivenNodeInBinaryTree *
BurnABinaryTreeFromALeaf *
CountNodesInACompleteBinaryTree *
==============================     geeks for geeks dsa course (https://practice.geeksforgeeks.org/batch/dsa-4/)

hard, not fully understood ->
KthAncestorOfGivenNode
FindTheLargestCompleteSubtreeInAGivenBinaryTree







Tree -
https://practice.geeksforgeeks.org/batch/dsa-4/
https://www.educative.io/courses/data-structures-coding-interviews-java
https://www.educative.io/courses/coderust-hacking-the-coding-interview
https://www.algoexpert.io/questions
elements book - java
450 questions -> https://drive.google.com/file/d/1FMdN_OCfOI0iAeDlqswCiC2DZzD4nPsb/view


Graph -
https://www.youtube.com/watch?v=09_LlHjoEiY


object-oriented-design -
https://practice.geeksforgeeks.org/courses/object-oriented-design
java -
https://online.codingblocks.com/courses/coding-interview-preparation-course-online-java
concurrent and parallel Java programming
https://www.youtube.com/watch?v=NVcbxQEoseE&list=PLZ9NgFYEMxp6aIJ8c6sxI8jakvub-vQxb